# -*- coding: utf-8 -*-
"""Resume without Photo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16cP-FYdOz9U-iK1gZPhXDow3uHdUwsV4
"""

# Commented out IPython magic to ensure Python compatibility.
# Text Variables
#Header = '>>>This resume will be generated entirely in Python. Kindly mention your deltails below clearly.'
Name = 'ARYAN BAJAJ'
Title = 'XXX student at XXX University'
Contact = '829111110\nxxyy840@gmail.com'
ProjectsHeader = 'PROJECTS/PUBLICATIONS'

ProjectOneTitle = 'Maintenance: Gender Neutral Or Gender Bias'
ProjectOneDesc = 'Published by White Black Legal Journal'
ProjectTwoTitle = 'Indian Legal System and Artificial Intelligence'
ProjectTwoDesc = 'Published by Acumen Finalysis'
ProjectThreeTitle = 'International Arbitration Concerning the law of Sea Convention'
ProjectThreeDesc = '- Published by Indian Journal of Law and Legal Research'

Portfolio = 'Add link here'

WorkHeader = 'EXPERIENCE'
WorkFiveTitle = '1'
WorkFiveTime = 'July 2020 – Aug 2020'
WorkFiveDesc = 'description'
#Add these columns again to add more experience

EduHeader = 'EDUCATION'
EduOneTitle = 'AI Engineering'
EduOneTime = '2019 – Present'
#EduOneDesc = '- Major: Management, Minor: Statistics'
#Add these columns again to add more education

SkillsHeader = 'Skills'
SkillsDesc = '- skills description'

ExtrasTitle = 'Additional info'
ExtrasDesc = 'descroption'
ExtrasOneTitle = 'additional title'
ExtrasOneDesc = 'description'

CodeTitle = 'View Portfolio'

# Setting style for bar graphs
import matplotlib.pyplot as plt
# %matplotlib inline

# set font
plt.rcParams['font.family'] = 'sans-serif'
plt.rcParams['font.sans-serif'] = 'STIXGeneral'

fig, ax = plt.subplots(figsize=(8.5, 11))

# Decorative Lines
ax.axvline(x=.5, ymin=0, ymax=1, color='#007ACC', alpha=0.0, linewidth=50)
plt.axvline(x=.99, color='#000000', alpha=0.5, linewidth=300)
plt.axhline(y=.88, xmin=0, xmax=1, color='#ffffff', linewidth=3)

# set background color
ax.set_facecolor('white')

# remove axes
plt.axis('off')

# add text
#plt.annotate(Header, (.02,.98), weight='regular', fontsize=8, alpha=.6)
plt.annotate(Name, (.02,.94), weight='bold', fontsize=20)

plt.annotate(Title, (.02,.91), weight='regular', fontsize=14)

plt.annotate(Contact, (.7,.906), weight='regular', fontsize=8, color='#ffffff')

plt.annotate(ProjectsHeader, (.02,.86), weight='bold', fontsize=10, color='#58C1B2')
plt.annotate(ProjectOneTitle, (.02,.832), weight='bold', fontsize=10)
plt.annotate(ProjectOneDesc, (.04,.78), weight='regular', fontsize=9)
plt.annotate(ProjectTwoTitle, (.02,.745), weight='bold', fontsize=10)
plt.annotate(ProjectTwoDesc, (.04,.71), weight='regular', fontsize=9)
plt.annotate(ProjectThreeTitle, (.02,.672), weight='bold', fontsize=10)
plt.annotate(ProjectThreeDesc, (.04,.638), weight='regular', fontsize=9)

plt.annotate(Portfolio, (.02,.6), weight='bold', fontsize=10)

plt.annotate(WorkHeader, (.02,.54), weight='bold', fontsize=10, color='#58C1B2')
plt.annotate(WorkOneTitle, (.02,.508), weight='bold', fontsize=10)
plt.annotate(WorkOneTime, (.02,.493), weight='regular', fontsize=9, alpha=.6)
plt.annotate(WorkOneDesc, (.04,.445), weight='regular', fontsize=9)
plt.annotate(WorkTwoTitle, (.02,.4), weight='bold', fontsize=10)
plt.annotate(WorkTwoTime, (.02,.385), weight='regular', fontsize=9, alpha=.6)
plt.annotate(WorkTwoDesc, (.04,.337), weight='regular', fontsize=9)
plt.annotate(WorkThreeTitle, (.02,.295), weight='bold', fontsize=10)
plt.annotate(WorkThreeTime, (.02,.28), weight='regular', fontsize=9, alpha=.6)
plt.annotate(WorkThreeDesc, (.04,.247), weight='regular', fontsize=9)
plt.annotate(WorkFourTitle, (.02,.508), weight='bold', fontsize=10)
plt.annotate(WorkFourTime, (.02,.493), weight='regular', fontsize=9, alpha=.6)
plt.annotate(WorkFourDesc, (.04,.445), weight='regular', fontsize=9)
plt.annotate(WorkFiveTitle, (.02,.4), weight='bold', fontsize=10)
plt.annotate(WorkFiveTime, (.02,.385), weight='regular', fontsize=9, alpha=.6)
plt.annotate(WorkFiveDesc, (.04,.337), weight='regular', fontsize=9)


plt.annotate(EduHeader, (.02,.185), weight='bold', fontsize=10, color='#58C1B2')
plt.annotate(EduOneTitle, (.02,.155), weight='bold', fontsize=10)
plt.annotate(EduOneTime, (.02,.14), weight='regular', fontsize=9, alpha=.6)
#plt.annotate(EduOneDesc, (.04,.125), weight='regular', fontsize=9)
plt.annotate(EduTwoTitle, (.02,.08), weight='bold', fontsize=10)
plt.annotate(EduTwoTime, (.02,.065), weight='regular', fontsize=9, alpha=.6)
plt.annotate(EduThreeTitle, (.02,.08), weight='bold', fontsize=10)
plt.annotate(EduThreeTime, (.02,.065), weight='regular', fontsize=9, alpha=.6)

plt.annotate(SkillsHeader, (.7,.8), weight='bold', fontsize=10, color='#ffffff')
plt.annotate(SkillsDesc, (.7,.56), weight='regular', fontsize=10, color='#ffffff')

plt.annotate(ExtrasTitle, (.7,.43), weight='bold', fontsize=10, color='#ffffff')
plt.annotate(ExtrasDesc, (.7,.345), weight='regular', fontsize=10, color='#ffffff')
plt.annotate(ExtrasOneTitle, (.7,.43), weight='bold', fontsize=10, color='#ffffff')
plt.annotate(ExtrasOneDesc, (.7,.345), weight='regular', fontsize=10, color='#ffffff')

plt.annotate(CodeTitle, (.7,.2), weight='bold', fontsize=10, color='#ffffff')

#add qr code
from matplotlib.offsetbox import TextArea, DrawingArea, OffsetImage, AnnotationBbox
import matplotlib.image as mpimg
arr_code2 = mpimg.imread('add link here')
imagebox = OffsetImage(arr_code2, zoom=0.25)
ab2 = AnnotationBbox(imagebox, (0.83, 0.10))
ax.add_artist(ab2)

plt.savefig('resumeexample.png', dpi=300, bbox_inches='tight')

# Python3 program to convert image to pfd
# using img2pdf library

# importing necessary libraries
import img2pdf
from PIL import Image
import os

# storing image path
img_path = 'resumeexample.png'

# storing pdf path
pdf_path = '/content/Resume Maker using python/Vaishnavi Rastogi.pdf'

# opening image
image = Image.open(img_path)

# converting into chunks using img2pdf
pdf_bytes = img2pdf.convert(image.filename)

# opening or creating pdf file
file = open(pdf_path, "wb")

# writing pdf files with chunks
file.write(pdf_bytes)

# closing image file
image.close()

# closing pdf file
file.close()

# output
print("Successfully made pdf file")